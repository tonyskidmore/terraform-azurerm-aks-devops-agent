---

apiVersion: batch/v1
kind: Job
metadata:
  name: azure-pipelines-setup
  namespace: "{{ .Values.namespace }}"
  annotations:
    # required for operation
    bridgecrew.io/skip1: CKV_K8S_20="Containers should not run with allowPrivilegeEscalation"
    # required for operation
    bridgecrew.io/skip2: CKV_K8S_22=Use read-only filesystem for containers where possible
    # TODO: check if this can be implemented
    bridgecrew.io/skip3: CKV_K8S_23=Minimize the admission of root containers
    # required for operation
    bridgecrew.io/skip4: CKV_K8S_28="Minimize the admission of containers with the NET_RAW capability"
   # required for operation
    bridgecrew.io/skip5: CKV_K8S_30="Apply security context to your containers"
    # required for operation
    bridgecrew.io/skip6: CKV_K8S_37="Minimize the admission of containers with capabilities assigned"
    # required for operation
    bridgecrew.io/skip7: CKV_K8S_38="Ensure that Service Account Tokens are only mounted where necessary"
    # use stable for deplyment image
    bridgecrew.io/skip8: CKV_K8S_43="Image should use digest"
    # TODO: check if this can be implemented
    bridgecrew.io/skip9: CKV_K8S_35="Prefer using secrets as files over secrets as environment variables"
    # TODO: check if this can be implemented
    bridgecrew.io/skip10: CKV_K8S_40="Containers should run as a high UID to avoid host conflict"
spec:
  activeDeadlineSeconds: 300
  backoffLimit: 0
  ttlSecondsAfterFinished: 600
  template:
    spec:
      restartPolicy: Never
      activeDeadlineSeconds: 240
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: azure-pipelines-agent
          image: "{{ .Values.container.image}}"
          securityContext:
          resources:
            limits:
              cpu: "{{ .Values.resources.limits.cpu }}"
              memory: "{{ .Values.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
          imagePullPolicy: Always
          env:
            - name: AZP_AGENT_NAME
              value: placeholder-agent
            - name: AZP_POOL
              value: "{{ .Values.pool.name}}"
          envFrom:
            - secretRef:
                name: pipeline-auth
